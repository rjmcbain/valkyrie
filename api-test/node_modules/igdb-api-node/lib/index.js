'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.config = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _configuration = require('../configuration');

var _configuration2 = _interopRequireDefault(_configuration);

var _endpoints = require('./endpoints');

var _endpoints2 = _interopRequireDefault(_endpoints);

var _getImage = require('./get-image');

var _getImage2 = _interopRequireDefault(_getImage);

var _scrollAll = require('./scroll-all');

var _scrollAll2 = _interopRequireDefault(_scrollAll);

var _tagNumber = require('./tag-number');

var _tagNumber2 = _interopRequireDefault(_tagNumber);

var _parseEndpoint = require('./parse-endpoint');

var _parseEndpoint2 = _interopRequireDefault(_parseEndpoint);

var _performRequest = require('./perform-request');

var _performRequest2 = _interopRequireDefault(_performRequest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (apiKey, staging) {
    var apiService = _configuration2.default.mashape;

    if (apiKey) {
        apiService = _configuration2.default.mashape;

        if (apiKey.length === 32) {
            if (staging) {
                apiService = _configuration2.default.threeScaleStaging;
            } else {
                apiService = _configuration2.default.threeScale;
            }
        }
        apiService.key = apiKey;
    } else {
        (0, _keys2.default)(_configuration2.default).forEach(function (api) {
            api = _configuration2.default[api];
            apiKey = process.env[api.globalProperty] || global[api.globalProperty] || '';
            if (apiKey) {
                apiService = api;
                apiService.key = apiKey;
            }
        });
    }

    return _endpoints2.default.reduce(function (endpointObj, endpoint) {
        endpointObj[endpoint] = (0, _parseEndpoint2.default)(endpoint, apiService);
        return endpointObj;
    }, {
        image: _getImage2.default,
        tagNumber: _tagNumber2.default,
        scroll: function scroll(url) {
            return (0, _performRequest2.default)('' + apiService.url + url, apiService);
        },
        scrollAll: function scrollAll(url, options) {
            return (0, _scrollAll2.default)(url, options, apiService, _performRequest2.default);
        }
    });
};

exports.config = _configuration2.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2pzL2luZGV4LmpzIl0sIm5hbWVzIjpbImFwaUtleSIsInN0YWdpbmciLCJhcGlTZXJ2aWNlIiwibWFzaGFwZSIsImxlbmd0aCIsInRocmVlU2NhbGVTdGFnaW5nIiwidGhyZWVTY2FsZSIsImtleSIsImZvckVhY2giLCJhcGkiLCJwcm9jZXNzIiwiZW52IiwiZ2xvYmFsUHJvcGVydHkiLCJnbG9iYWwiLCJyZWR1Y2UiLCJlbmRwb2ludE9iaiIsImVuZHBvaW50IiwiaW1hZ2UiLCJ0YWdOdW1iZXIiLCJzY3JvbGwiLCJ1cmwiLCJzY3JvbGxBbGwiLCJvcHRpb25zIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7a0JBUWUsVUFBQ0EsTUFBRCxFQUFTQyxPQUFULEVBQXFCO0FBQ2hDLFFBQUlDLGFBQWEsd0JBQU9DLE9BQXhCOztBQUVBLFFBQUlILE1BQUosRUFBWTtBQUNSRSxxQkFBYSx3QkFBT0MsT0FBcEI7O0FBRUEsWUFBSUgsT0FBT0ksTUFBUCxLQUFrQixFQUF0QixFQUEwQjtBQUN0QixnQkFBSUgsT0FBSixFQUFhO0FBQ1RDLDZCQUFhLHdCQUFPRyxpQkFBcEI7QUFDSCxhQUZELE1BRU87QUFDSEgsNkJBQWEsd0JBQU9JLFVBQXBCO0FBQ0g7QUFDSjtBQUNESixtQkFBV0ssR0FBWCxHQUFpQlAsTUFBakI7QUFDSCxLQVhELE1BV087QUFDSCxxREFBb0JRLE9BQXBCLENBQTRCLGVBQU87QUFDL0JDLGtCQUFNLHdCQUFPQSxHQUFQLENBQU47QUFDQVQscUJBQVNVLFFBQVFDLEdBQVIsQ0FBWUYsSUFBSUcsY0FBaEIsS0FBbUNDLE9BQU9KLElBQUlHLGNBQVgsQ0FBbkMsSUFBaUUsRUFBMUU7QUFDQSxnQkFBSVosTUFBSixFQUFZO0FBQ1JFLDZCQUFhTyxHQUFiO0FBQ0FQLDJCQUFXSyxHQUFYLEdBQWlCUCxNQUFqQjtBQUNIO0FBQ0osU0FQRDtBQVFIOztBQUVELFdBQU8sb0JBQVVjLE1BQVYsQ0FBaUIsVUFBQ0MsV0FBRCxFQUFjQyxRQUFkLEVBQTJCO0FBQy9DRCxvQkFBWUMsUUFBWixJQUF3Qiw2QkFBY0EsUUFBZCxFQUF3QmQsVUFBeEIsQ0FBeEI7QUFDQSxlQUFPYSxXQUFQO0FBQ0gsS0FITSxFQUdKO0FBQ0NFLGlDQUREO0FBRUNDLHNDQUZEO0FBR0NDLGdCQUFRO0FBQUEsbUJBQU8sbUNBQWtCakIsV0FBV2tCLEdBQTdCLEdBQW1DQSxHQUFuQyxFQUEwQ2xCLFVBQTFDLENBQVA7QUFBQSxTQUhUO0FBSUNtQixtQkFBVyxtQkFBQ0QsR0FBRCxFQUFNRSxPQUFOO0FBQUEsbUJBQWtCLHlCQUFhRixHQUFiLEVBQWtCRSxPQUFsQixFQUEyQnBCLFVBQTNCLDJCQUFsQjtBQUFBO0FBSlosS0FISSxDQUFQO0FBU0gsQzs7UUFHR3FCLE0iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tcHJvY2Vzcy1lbnY6IDAgKi9cbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlndXJhdGlvbic7XG5pbXBvcnQgZW5kcG9pbnRzIGZyb20gJy4vZW5kcG9pbnRzJztcbmltcG9ydCBnZXRJbWFnZSBmcm9tICcuL2dldC1pbWFnZSc7XG5pbXBvcnQgZ2V0U2Nyb2xsQWxsIGZyb20gJy4vc2Nyb2xsLWFsbCc7XG5pbXBvcnQgZ2V0VGFnTnVtYmVyIGZyb20gJy4vdGFnLW51bWJlcic7XG5pbXBvcnQgcGFyc2VFbmRwb2ludCBmcm9tICcuL3BhcnNlLWVuZHBvaW50JztcbmltcG9ydCBwZXJmb3JtUmVxdWVzdCBmcm9tICcuL3BlcmZvcm0tcmVxdWVzdCc7XG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgSUdEQiBBUEkgb2JqZWN0LCBwb3B1bGF0ZWQgd2l0aCBtZXRob2RzIGZvciBhbGwgZGVmaW5lZCBlbmRwb2ludHMuXG4gKiBAYXJnIHtzdHJpbmd9IFthcGlLZXldXG4gKiBAYXJnIHtib29sfSBbc3RhZ2luZ11cbiAqIEByZXR1cm5zIHtPYmplY3R9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IChhcGlLZXksIHN0YWdpbmcpID0+IHtcbiAgICBsZXQgYXBpU2VydmljZSA9IGNvbmZpZy5tYXNoYXBlO1xuXG4gICAgaWYgKGFwaUtleSkge1xuICAgICAgICBhcGlTZXJ2aWNlID0gY29uZmlnLm1hc2hhcGU7XG5cbiAgICAgICAgaWYgKGFwaUtleS5sZW5ndGggPT09IDMyKSB7XG4gICAgICAgICAgICBpZiAoc3RhZ2luZykge1xuICAgICAgICAgICAgICAgIGFwaVNlcnZpY2UgPSBjb25maWcudGhyZWVTY2FsZVN0YWdpbmc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFwaVNlcnZpY2UgPSBjb25maWcudGhyZWVTY2FsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhcGlTZXJ2aWNlLmtleSA9IGFwaUtleTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyhjb25maWcpLmZvckVhY2goYXBpID0+IHtcbiAgICAgICAgICAgIGFwaSA9IGNvbmZpZ1thcGldO1xuICAgICAgICAgICAgYXBpS2V5ID0gcHJvY2Vzcy5lbnZbYXBpLmdsb2JhbFByb3BlcnR5XSB8fCBnbG9iYWxbYXBpLmdsb2JhbFByb3BlcnR5XSB8fCAnJztcbiAgICAgICAgICAgIGlmIChhcGlLZXkpIHtcbiAgICAgICAgICAgICAgICBhcGlTZXJ2aWNlID0gYXBpO1xuICAgICAgICAgICAgICAgIGFwaVNlcnZpY2Uua2V5ID0gYXBpS2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZW5kcG9pbnRzLnJlZHVjZSgoZW5kcG9pbnRPYmosIGVuZHBvaW50KSA9PiB7XG4gICAgICAgIGVuZHBvaW50T2JqW2VuZHBvaW50XSA9IHBhcnNlRW5kcG9pbnQoZW5kcG9pbnQsIGFwaVNlcnZpY2UpO1xuICAgICAgICByZXR1cm4gZW5kcG9pbnRPYmo7XG4gICAgfSwge1xuICAgICAgICBpbWFnZTogZ2V0SW1hZ2UsXG4gICAgICAgIHRhZ051bWJlcjogZ2V0VGFnTnVtYmVyLFxuICAgICAgICBzY3JvbGw6IHVybCA9PiBwZXJmb3JtUmVxdWVzdChgJHthcGlTZXJ2aWNlLnVybH0ke3VybH1gLCBhcGlTZXJ2aWNlKSxcbiAgICAgICAgc2Nyb2xsQWxsOiAodXJsLCBvcHRpb25zKSA9PiBnZXRTY3JvbGxBbGwodXJsLCBvcHRpb25zLCBhcGlTZXJ2aWNlLCBwZXJmb3JtUmVxdWVzdClcbiAgICB9KTtcbn07XG5cbmV4cG9ydCB7XG4gICAgY29uZmlnXG59O1xuIl19